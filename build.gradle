/*
 *  ModernEconomy is a Minecraft plugin.
 *  Copyright (C) 2023 Nukecraft5419
 *
 *  Licensed under GNU License.  Please see the LICENSE document 
 *  as found in the root directory of this project.
 *
 */
import java.text.SimpleDateFormat
import java.util.Date

apply plugin: 'java'
//apply plugin: 'maven'
//apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

archivesBaseName = 'ModernEconomy'
group = 'dev.nukecraft5419.moderneconomy'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = "UTF-8"

ext.targetArchiveClassifier = 'Java1.8'

sourceCompatibility = 1.8
targetCompatibility = 1.8


// Lists all versions of java that are available to the toolchain
// $ ./gradlew -q javaToolchains

// Specify the java version's location as found in the javaToolchains.
// $ ./gradlew build -Dorg.gradle.java.home="C:\Program Files\Java\jdk1.8.0_291"

//java {
//  toolchain {
//    languageVersion.set(JavaLanguageVersion.of(8))
////    languageVersion.set(JavaLanguageVersion.of(16))
//  }
//}

repositories {
    mavenCentral()

    //maven { url "https://maven.sk89q.com/repo/" }
    //maven { url "https://mvnrepository.com/artifact/org.apache.commons/commons-lang3" }

    maven { url = "https://hub.spigotmc.org/nexus/content/groups/public" }
    
    //maven { url = "https://repo.lucko.me/" }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven { url = "https://repo.inventivetalent.org/content/groups/public/" }
    // maven { url = 'http://repo.extendedclip.com/content/repositories/placeholderapi/' }
    
    
    //maven { url = "https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc" }
    
    maven { url = "https://mvnrepository.com/artifact" }

    //maven { url = 'https://maven.enginehub.org/repo/' }
    
    //maven { url = "https://jitpack.io" }
}

configurations {
    deployerJars
}

dependencies {

    compileOnly 'org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT'

    implementation 'org.bstats:bstats-base:3.0.0'
    implementation 'org.bstats:bstats-bukkit:3.0.0'
    
    
//    implementation 'org.inventivetalent.spiget-update:bukkit:1.4.2-SNAPSHOT'
//	  implementation 'org.apache.commons:commons-lang3:3.9'

//    implementation 'me.clip:placeholderapi:2.9.1'

    
//    implementation 'net.luckperms:api:5.0'
//    implementation 'me.lucko.luckperms:luckperms-api:4.0'
    
//    compileOnly 'org.xerial:sqlite-jdbc:3.32.3.2'
    
    
//	implementation 'com.github.cryptomorin:XSeries:8.8.0'

    
//    compileOnly 'net.milkbowl.vault:VaultAPI:1.6'

    testImplementation 'junit:junit:4.12'
    
    
}


/* Two different ways to enable utf-8 encoding within gradle, but not sure its
 * even needed at this time.  Keeping for a few builds to make sure all is ok.
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
   options.encoding = 'UTF-8'
}
*/

 
println """
==========================================================================
You are building the ModernEconomy plugin 
  Version:    ${project.version} 
  Build time: ${getCurrentTimestamp()}

Output files are located in /build/libs
The runnable JAR is usually named ModernEconomy-${project.version}.jar
Example: The spigot build artifact is build/libs/ModernEconomy-${project.version}.jar
==========================================================================
"""

buildscript {

    repositories {
        mavenCentral()
        
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }

}



wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

def getCurrentTimestamp()
{
  SimpleDateFormat df = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss")
  return df.format (new Date())
}


/*
clean {
    delete "${rootProject.name}.jar"
}
*/

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand 'version': project.version
        include 'plugin.yml', 'config.yml'
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml', 'config.yml'
    }

    
    // Need to have includ duplicates for the version to be updated in the plugin.yml file.
    // Also the final build is actually smaller with include.    
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // do not allow duplicates
}

shadowJar {
    dependencies {
           
        include(dependency('org.bstats:bstats-base:3.0.0'))
        include(dependency('org.bstats:bstats-bukkit:3.0.0'))
    
//    	include(dependency('org.xerial:sqlite-jdbc:3.32.3.2'))
    	
//        include(dependency('com.google.code.gson:gson:2.8.6'))
//        include(dependency('org.apache.commons:commons-lang3:3.10'))
//        include(dependency('me.clip:placeholderapi:2.9.1'))
//        include(dependency('org.bstats:bstats-bukkit:1.5'))
//        include(dependency('org.inventivetalent.spiget-update:bukkit:1.4.2-SNAPSHOT'))
//        include(dependency('com.github.cryptomorin:XSeries:8.8.0'))

    }


    classifier ''
    archiveVersion = ''
    
    minimize()
}

build.dependsOn(shadowJar)

